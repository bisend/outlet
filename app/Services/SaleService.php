<?php
/**
 * Created by PhpStorm.
 * User: vlad_
 * Date: 20.02.2018
 * Time: 17:39
 */

namespace App\Services;


use App\Helpers\Paginator;
use App\Repositories\CategoryRepository;
use App\Repositories\ProductRepository;

class SaleService extends LayoutService
{
    private $productRepository;

    public function __construct(CategoryRepository $categoryRepository, ProductRepository $productRepository)
    {
        parent::__construct($categoryRepository);

        $this->productRepository = $productRepository;
    }

    public function fill($model)
    {
        parent::fill($model); // TODO: Change the autogenerated stub

        $this->fillProducts($model);

        $this->fillCountProducts($model);

        $this->fillMetaTags($model);

        $this->fillSeoTags($model);
    }

    public function fillProducts($model)
    {
        $model->products = $this->productRepository->getAllSalesProducts($model);

        if (!is_null($model->products) && $model->products->count() > 0)
        {
            foreach ($model->products as $product)
            {
                $product->currentSizeId = $product->sizes[0]->id;
            }
        }
    }

    public function fillCountProducts($model)
    {
        $model->countProducts = $this->productRepository->getCountAllSalesProducts($model);
    }

    private function fillMetaTags($model)
    {
        $model->title = trans('home.sale');
        $model->description = trans('home.sale');
        $model->keywords = trans('home.sale');
        $model->h1 = trans('home.sale');
    }

    private function fillSeoTags($model)
    {
        $pages = Paginator::createPagination($model->page, $model->limit, $model->countProducts);

        $isPrev = array_shift($pages);

        $isNext = array_pop($pages);

        if ($isPrev)
        {
            $model->metaLinkPrev = url_sale_per_page($model->sort, $model->page - 1, $model->language);
        }

        if ($isNext)
        {
            $model->metaLinkNext = url_sale_per_page($model->sort, $model->page + 1, $model->language);
        }

        if ((int)$model->page > 1)
        {
            $model->setNoIndex = true;
        }

        if ($model->sort != 'default')
        {
            $model->setNoIndex = true;
        }
    }
}