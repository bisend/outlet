<?php
/**
 * Created by PhpStorm.
 * User: vlad_
 * Date: 12.04.2018
 * Time: 11:44
 */

namespace App\Services;


use App\Repositories\CategoryRepository;
use App\Repositories\ProductRepository;
use App\Repositories\ReviewRepository;

/**
 * Class ProductService
 * @package App\Services
 */
class ProductService extends LayoutService
{
    /**
     * @var $product_repository
     */
    protected $product_repository;

    /**
     * @var $review_repository
     */
    protected $review_repository;

    /**
     * ProductService constructor.
     * @param CategoryRepository $categoryRepository
     * @param ProductRepository $productRepository
     * @param ReviewRepository $reviewRepository
     */
    public function __construct(CategoryRepository $categoryRepository,
                                ProductRepository $productRepository,
                                ReviewRepository $reviewRepository)
    {
        parent::__construct($categoryRepository);

        $this->product_repository = $productRepository;

        $this->review_repository = $reviewRepository;
    }

    /**
     * filling model with data
     * @param $model
     */
    public function fill($model)
    {
        parent::fill($model); // TODO: Change the autogenerated stub

        $this->fill_product($model);

        $this->fill_product_category($model);

        $this->fill_similar_products($model);

        $this->fill_meta_tags($model);
    }

    /**
     * filling product
     * @param $model
     */
    private function fill_product($model)
    {
        $model->product = $this->product_repository->get_product_by_slug($model);
    }

    /**
     * filling product category
     * @param $model
     */
    private function fill_product_category($model)
    {
        $model->product_category = $this->category_repository->get_product_category_by_id($model);
    }

    /**
     * filling similar products
     * @param $model
     */
    private function fill_similar_products($model)
    {
        $model->similar_products = $this->product_repository->get_similar_products($model);
    }

    /**
     * filling meta tags
     * @param $model
     */
    private function fill_meta_tags($model)
    {
        $model->title = $model->product->meta_title;
        $model->description = $model->product->meta_description;
        $model->keywords = $model->product->meta_keywords;
        $model->h1 = $model->product->meta_h1;
    }

    /**
     * filling reviews for product
     * @param $product_id
     * @param $page
     * @return \Illuminate\Database\Eloquent\Collection|\Illuminate\Support\Collection|static[]
     */
    public function fill_reviews($product_id, $page)
    {
        $review_limit = 5;

        $review_offset = ($page - 1) * $review_limit;

        return $this->review_repository->get_reviews($product_id, $review_offset, $review_limit);
    }

    /**
     * filling reviews total count for product
     * @param $product_id
     * @return int
     */
    public function fill_reviews_count($product_id)
    {
        return $this->review_repository->get_reviews_count($product_id);
    }

    public function add_review($productId, $userId, $review, $name, $email, $rating)
    {
        $this->review_repository->add_review($productId, $userId, $review, $name, $email, $rating);
    }
}